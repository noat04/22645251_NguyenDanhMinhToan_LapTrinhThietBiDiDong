import { CartItem } from "../models/types";
import db from "./db";

// üîπ L·∫•y danh s√°ch gi·ªè h√†ng
export async function getCart(): Promise<CartItem[]> {
  return await db.getAllAsync(`
    SELECT c.id, c.product_id, p.name, p.price, c.qty, p.stock
    FROM cart_items c
    JOIN products p ON c.product_id = p.product_id
  `);
}

// üîπ Th√™m s·∫£n ph·∫©m v√†o gi·ªè (c√≥ ki·ªÉm tra t·ªìn kho)
export async function addToCart(productId: string): Promise<boolean> {
  // L·∫•y th√¥ng tin s·∫£n ph·∫©m
  const product = await db.getFirstAsync<{ stock: number; name: string }>(
    "SELECT stock, name FROM products WHERE product_id = ?",
    [productId]
  );

  if (!product) {
    console.warn("‚ö†Ô∏è S·∫£n ph·∫©m kh√¥ng t·ªìn t·∫°i trong CSDL");
    return false;
  }

  // Ki·ªÉm tra n·∫øu h·∫øt h√†ng
  if (product.stock <= 0) {
    console.warn(`‚ö†Ô∏è S·∫£n ph·∫©m "${product.name}" ƒë√£ h·∫øt h√†ng`);
    return false;
  }

  // L·∫•y th√¥ng tin s·∫£n ph·∫©m trong gi·ªè
  const existing = await db.getFirstAsync<{ qty: number }>(
    "SELECT qty FROM cart_items WHERE product_id = ?",
    [productId]
  );

  // N·∫øu ƒë√£ c√≥ trong gi·ªè, ki·ªÉm tra t·ªìn kho
  if (existing) {
    if (existing.qty >= product.stock) {
      console.warn(`‚ö†Ô∏è V∆∞·ª£t qu√° s·ªë l∆∞·ª£ng t·ªìn kho (${product.stock})`);
      return false;
    }

    await db.runAsync(
      "UPDATE cart_items SET qty = qty + 1 WHERE product_id = ?",
      [productId]
    );
  } else {
    await db.runAsync(
      "INSERT INTO cart_items(product_id, qty) VALUES (?, 1)",
      [productId]
    );
  }

  return true;
}

// üîπ C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè (c√≥ ki·ªÉm tra t·ªìn kho)
export async function updateQty(id: number, qty: number): Promise<boolean> {
  // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ gi·ªè v√† kho
  const cartItem = await db.getFirstAsync<{ product_id: string; stock: number }>(
    `
    SELECT c.product_id, p.stock
    FROM cart_items c
    JOIN products p ON c.product_id = p.product_id
    WHERE c.id = ?
    `,
    [id]
  );

  if (!cartItem) {
    console.warn("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m trong gi·ªè h√†ng");
    return false;
  }

  // N·∫øu s·ªë l∆∞·ª£ng v∆∞·ª£t qu√° t·ªìn kho
  if (qty > cartItem.stock) {
    console.warn(`‚ö†Ô∏è V∆∞·ª£t qu√° s·ªë l∆∞·ª£ng t·ªìn kho (${cartItem.stock})`);
    return false;
  }

  // N·∫øu s·ªë l∆∞·ª£ng <= 0 th√¨ x√≥a kh·ªèi gi·ªè
  if (qty <= 0) {
    await db.runAsync("DELETE FROM cart_items WHERE id = ?", [id]);
  } else {
    await db.runAsync("UPDATE cart_items SET qty = ? WHERE id = ?", [qty, id]);
  }

  return true;
}
